(1)
//Write a C Program to perform basic calculator operation using switch case
#include<stdio.h>
int main()
{
	int n1,n2,sum,diff,p,result;
	char op;
	printf("Enter the operation '+,-,*,/'");
	scanf("%c",&op);
	printf("Enter any two Integers: ");
	scanf("%d %d",&n1,&n2);
	switch(op)
	{
		case '+':
			printf("The operation is addition");
			sum=n1+n2;
			printf("\nThe sum of %d and %d is %d",n1,n2,sum);
			break;
		case '-':
			printf("The operation is Subtraction");
			diff=n1-n2;
			printf("The Difference of %d and %d is %d",n1,n2,diff);
			break;
		case '*':
			p=n1*n2;
			printf("The product of %d and %d is %d",n1,n2,p);
			break;
		case '/':
			if(n2!=0)
			{
				
				result=(float)n1/n2;
				printf("The quotient of %d divided by %d is %f",n1,n2,result);
			}
			else
				printf("Any number cannot be divided by 0");
				break;
			default:
				printf("Operator not  defined");
			
			return 0;	
	}
}

(2)
//Write a C program to find the roots of the quadratic equation
#include<stdio.h>
#include<math.h>
int main()
{
	int a,b,c;
	float d,root1,root2;
	printf("Enter the coeffficients of the quadratic equation a,b,c: ");
	scanf("%d %d %d",&a,&b,&c);
	d=b*b-4*a*c;
	if(d>0)
	{
		printf("The roots are real and distinct");
		root1=(-b-sqrt(d))/(2*a);
		root2=(-b+sqrt(d))/(2*a);
		printf("\nThe roots of the quadratic equation is %f and %f",root1,root2);
		
	}
	else if(d==0)
	{
		printf("The roots are real and equal");
		root1=root2=(-b)/(2*a);
		printf("\nThe roots of the quadratic equation is %f and %f",root1,root2);
		
	}
	else if(d<0)
	{
		printf("The roots are complex and imaginary");
		root1=(-b)/(2*a);
		root2=sqrt(-d)/(2*a);
		printf("\nThe roots of the quadratic equation is %f and %f",root1,root2);
	}
	return 0;
}

(3)
//Write a c program to find gcd and lcm of two integers
#include<stdio.h>
int main()
{
    int n1,n2,gcd,lcm;
    printf("Enter any two integers: ");
    scanf("%d %d",&n1,&n2);
    //To find GCD of two integers
    int a=n1,b=n2;
    while(b!=0)
    {
        int temp=b;
        b=a%b;
        a=temp;
    }
    gcd=a;
    //To find the LCM of two integers
    lcm=(n1*n2)/gcd;
    printf("The GCD and LCM of %d and %d is %d and %d",n1,n2,gcd,lcm);
    return 0;
}  

(4)
//Write a C Program to print the fibonacci series
#include<stdio.h>
int main()
{
    int num,first=0,second=1,next;
    printf("Enter the number of terms in the fibonacci series: ");
    scanf("%d",&num);
    if(num<=0)
    {
        printf("Enter a positive integer for number of terms in the fibonacci series");
        return 1;
    }
    else
    printf("Fibonacci Series of first %d numbers: \n",num);
    for (int i=0;i<num;i++) 
   {
        printf("%d,",first);
        next = first + second;
        first = second;
        second = next;
    }

    return 0;

}

(5)
//Write a C program to check whether a given number is palindrome or not
#include <stdio.h>
int main() 
{

    int num, originalNum, reversedNum = 0, remainder;
    printf("Enter an integer:");
    scanf("%d", &num);
    originalNum = num;
    while (num != 0) 
    {
        remainder = num % 10;
        reversedNum = reversedNum * 10 + remainder;
        num=num/10;
    }
    if (originalNum == reversedNum)
    	printf("%d is a palindrome.\n", originalNum);
    else 
        printf("%d is not a palindrome.\n", originalNum);
    return 0;
}

(6)
//Write a C program to display the Pascal's Triangle for 'n' number of rows
#include <stdio.h> 
int main ()
{ 
    int n;
    printf ("Enter number of rows:");
    scanf ("%d", &n);
    for (int line = 1; line <= n; line++)
    { 
        for (int space = 1; space <= n - line; space++) 
            printf("  "); 
        // used to represent C(line, i) 
        int coef = 1; 
        for (int i = 1; i <= line; i++) { 
            // The first value in a line 
            // is always 1 
            printf("%4d", coef); 
            coef = coef * (line - i) / i; 
        } 
        printf("\n"); 
    } 
    return 0;
} 

(7)
//Write a C program to display the grade of students in the computer test
# include <stdio.h>
int main ()
{
    float grade;
    printf ("Enter your grade (0 to 10):");
    scanf ("%f", &grade);
    if (grade == 10)
        printf ("Grade:O, Performance: Outstanding");
    else if (grade >= 9)
        printf ("Grade:A+, Performance: Excellent");
    else if (grade >= 8)
        printf ("Grade:A, Performance: Very Good");
    else if (grade >= 7)
        printf ("Grade:B+, Performance: Good");
    else if (grade >= 6)
        printf ("Grade:B, Performance: Above Average");
    else if (grade >= 5.5)
        printf ("Grade:C+, Performance: Average");
    else if (grade >= 5)
        printf ("Grade:C, Performance: Satisfactory");
    else 
        printf ("Grade:F, Performance: Fail");
}

(8)
/*Write a C program to read the size of a one-dimensional array from the user and read 10 elements into the array (positive integers) and
1. print alternate numbers starting from index value 1.
2. Reverse the array elements and print the same.*/
#include <stdio.h>
int main() 
{
    int size,a[100];
    printf("Enter the size of the array: ");
    scanf("%d", &size);
    if (size < 10)
    {
       	 printf("Please enter a size of at least 10.\n");
       	 return 1;
     }
    printf("Enter %d positive integers:\n",size);
    for (int i = 0; i < size; ++i) 
    scanf("%d", &a[i]);

    printf("\nAlternate numbers starting from index 1:\n");
    for (int i = 1; i < size; i += 2) 
    printf("%d ", a[i]);
    printf("\n");

    printf("\nReversed array elements:\n");
    for (int i = size - 1; i >= 0; --i) 
    printf("%d ", a[i]);
    printf("\n");

    return 0;  
}

(9)
//Write a program to perform matrix multiplication
#include<stdio.h>
int main()
{
    int a[50][50],b[50][50],r[20][20],r1,r2,c1,c2,i,j,k;
    printf("Enter the number of rows and columns of the first matrix: ");
    scanf("%d%d",&r1,&c1);
    printf("Enter the number of rows and columns of the second matrix ");
    scanf("%d%d",&r2,&c2);

    if(c1==r2)
    {
        printf("Enter the first matrix elements\n");
        for(i=0;i<r1;i++)
        for(j=0;j<c1;j++)
        scanf("%d",&a[i][j]);
        printf("Enter the second matrix elements\n");
        for(i=0;i<r2;i++)
        for(j=0;j<c2;j++)
        scanf("%d",&b[i][j]);
    }

    else if(c1!=r2)
            {
                printf("Matrix multiplication is not possible due to incompatible dimensions.");
                return 0;
            }

   for ( i = 0; i < r1; ++i) 
   {
     for ( j = 0; j < c2; ++j) 
	{
	  r[i][j] = 0;
          for ( k = 0; k < c1; ++k) 
		{
                	r[i][j] =r[i][j]+ a[i][k] * b[k][j];
            	}
        }
  }
    printf("\nResultant Matrix\n");
    for(i=0;i<r1;i++)
    {
        for(j=0;j<c2;j++)
        {
            printf("%d\t",r[i][j]);
        }
        printf("\n");
    }
    return 1;
}

(10)
//Write a C Program to perform bubble sorting in ascending order
#include<stdio.h>
int main()
{
    int n,i,j,temp,a[50];
    printf("Enter the number of elements ");
    scanf("%d",&n);
    printf("Enter the elements \n");
    for(i=0;i<n;i++)
    scanf("%d",&a[i]);
    for(i=0;i<n-1;i++)
    {
        for(j=0;j<n-1;j++)
        {
            if(a[j]>a[j+1])
            {
                temp=a[j];
                a[j]=a[j+1];
                a[j+1]=temp;
            }
        }
    }
    printf("The sorted list of elements is \n");
    for(i=0;i<n;i++)
    printf("%d \t",a[i]);
return 0;
}

(11)
//Write a c program to perform binary search
#include<stdio.h>
int main()
{
    int n,i,a[100],low,high,mid,ele,pos=-1;
    printf("Enter the number of elements in the array ");
    scanf("%d",&n);
    printf("Enter the array elements in the ascending order \n");
    for(i=0;i<n;i++)
    scanf("%d",&a[i]);
    printf("\nEnter the element to be searched ");
    scanf("%d",&ele);
    low=0;
    high=n-1;
    while(low<=high)
    {
    mid=(low+high)/2;
    if(ele==a[mid])
    {
        pos=mid;
        break;
    }
    else if(ele<a[mid])
    high=mid-1;
    else
    low=mid+1;
    }
    if(pos==-1)
    printf("%d is not found",ele);
    else
    printf("%d is found at the position %d",ele,pos+1);
    return 0;
}
(12)
//Write a C program to perform string concatenation using the library function strcat()
#include<stdio.h>
#include<string.h>
int main()
{
    char str1[50],str2[50];
    printf("Enter the string1 ");
    gets(str1);
    printf("Enter the string2 ");
    gets(str2);
    strcat(str1,str2);
    printf("The Concatenated string is ");
    puts(str1);
    return 0;
}

(13)
/*Write a C program to define a structure named Student with name and DOB, where, DOB in turn is a structure with day, month and year. Using the concept of nested structures display your name and date of birth.*/
#include <stdio.h>

struct DOB {
int day;
int month;
int year;
};

struct Student {
char name[50];
struct DOB birthDate;
};
int main() {

struct Student student;

printf("Enter your name: ");
scanf("%s",student.name);
printf("Enter your date of birth (DD MM YYYY): ");
scanf("%d%d%d",&student.birthDate.day,&student.birthDate.month, &student.birthDate.year);

printf("\nStudent Information:\n");
printf("Name: %s", student.name);
printf("\nDate of Birth: %02d/%02d/%d\n", student.birthDate.day, student.birthDate.month, student.birthDate.year);
return 0;
} 
